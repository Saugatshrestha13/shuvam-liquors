{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    currentUser: null,\n    isFetching: false,\n    error: false,\n    registerUser: null,\n    isRegisterUserFetching: false,\n    registerUserError: false\n  },\n  reducers: {\n    loginStart: state => {\n      state.isFetching = true;\n    },\n    loginSuccess: (state, action) => {\n      state.isFetching = false;\n      state.currentUser = action.payload;\n    },\n    loginFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    registerStart: state => {\n      state.isFetching = true;\n    },\n    registerSuccess: (state, action) => {\n      state.isFetching = false;\n      state.currentUser = action.payload;\n    },\n    registerFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["/home/prajilstha/Documents/saugat/shuvam-liquors/client/src/redux/userRedux.js"],"names":["createSlice","userSlice","name","initialState","currentUser","isFetching","error","registerUser","isRegisterUserFetching","registerUserError","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","registerStart","registerSuccess","registerFailure","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAE,IADD;AAEZC,IAAAA,UAAU,EAAE,KAFA;AAGZC,IAAAA,KAAK,EAAE,KAHK;AAIZC,IAAAA,YAAY,EAAE,IAJF;AAKZC,IAAAA,sBAAsB,EAAE,KALZ;AAMZC,IAAAA,iBAAiB,EAAE;AANP,GAFc;AAU5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAGC,KAAD,IAAW;AACrBA,MAAAA,KAAK,CAACP,UAAN,GAAmB,IAAnB;AACD,KAHO;AAIRQ,IAAAA,YAAY,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAC/BF,MAAAA,KAAK,CAACP,UAAN,GAAmB,KAAnB;AACAO,MAAAA,KAAK,CAACR,WAAN,GAAoBU,MAAM,CAACC,OAA3B;AACD,KAPO;AAQRC,IAAAA,YAAY,EAAGJ,KAAD,IAAW;AACvBA,MAAAA,KAAK,CAACP,UAAN,GAAmB,KAAnB;AACAO,MAAAA,KAAK,CAACN,KAAN,GAAc,IAAd;AACD,KAXO;AAYRW,IAAAA,aAAa,EAAGL,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACP,UAAN,GAAmB,IAAnB;AACD,KAdO;AAeRa,IAAAA,eAAe,EAAE,CAACN,KAAD,EAAQE,MAAR,KAAmB;AAClCF,MAAAA,KAAK,CAACP,UAAN,GAAmB,KAAnB;AACAO,MAAAA,KAAK,CAACR,WAAN,GAAoBU,MAAM,CAACC,OAA3B;AACD,KAlBO;AAmBRI,IAAAA,eAAe,EAAGP,KAAD,IAAW;AAC1BA,MAAAA,KAAK,CAACP,UAAN,GAAmB,KAAnB;AACAO,MAAAA,KAAK,CAACN,KAAN,GAAc,IAAd;AACD;AAtBO;AAVkB,CAAD,CAA7B;AAoCA,OAAO,MAAM;AAAEK,EAAAA,UAAF;AAAcE,EAAAA,YAAd;AAA4BG,EAAAA;AAA5B,IAA6Cf,SAAS,CAACmB,OAA7D;AACP,eAAenB,SAAS,CAACoB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    currentUser: null,\n    isFetching: false,\n    error: false,\n    registerUser: null,\n    isRegisterUserFetching: false,\n    registerUserError: false,\n  },\n  reducers: {\n    loginStart: (state) => {\n      state.isFetching = true;\n    },\n    loginSuccess: (state, action) => {\n      state.isFetching = false;\n      state.currentUser = action.payload;\n    },\n    loginFailure: (state) => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    registerStart: (state) => {\n      state.isFetching = true;\n    },\n    registerSuccess: (state, action) => {\n      state.isFetching = false;\n      state.currentUser = action.payload;\n    },\n    registerFailure: (state) => {\n      state.isFetching = false;\n      state.error = true;\n    },\n  },\n});\n\nexport const { loginStart, loginSuccess, loginFailure } = userSlice.actions;\nexport default userSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}